#! /usr/bin/env python

## This code is written by Davide Albanese, <davide.albanese@gmail.com>
## Copyright (C) 2013 Fondazione Edmund Mach
## Copyright (C) 2013 Davide Albanese

## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.

## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.

## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.


from __future__ import division

import argparse

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from matplotlib import rcParams

from micca import argutils
from micca import __version__


def abundance_rank(x, cmap=None):
    xa = np.asarray(x)

    if cmap is None:
        cmap = plt.cm.get_cmap(rcParams['image.cmap'])

    colors = [cmap(i) for i in np.linspace(0, 1, xa.shape[0])]

    plots = []
    for i in range(xa.shape[0]):
        row = np.sort(xa[i])[::-1]
        row = row[row > 0.0]
        plot, = plt.plot(range(1, row.shape[0]+1), row, color=colors[i],
                         linewidth=2)
        plots.append(plot)
    return plots


def main():

    description = """micca-plot-rank plots OTUs rank abundaces for each sample from an OTU table.
"""
    epilog = """Example:

 $ micca-plot-rank otu_table.txt rank.png

micca v. %s.
Author: Davide Albanese <davide.albanese@fmach.it>
Fondazione Edmund Mach, 2014.
""" % __version__
    
    parser = argparse.ArgumentParser(
        description=description,
        formatter_class=argparse.RawDescriptionHelpFormatter,
        version=__version__, epilog=epilog)

    parser.add_argument('input', help="input OTU table file",
                        type=argutils.rfile)
    parser.add_argument('output', type=argutils.wfile,
                        help="output image file (.png, .pdf, .ps, .eps, .svg). "
                             "The image type is autodetected from the file "
                             "extension")
    args = parser.parse_args()

    otu_table = pd.read_csv(args.input, sep='\t', index_col=0)
    x = otu_table.as_matrix().T

    fig = plt.figure(1)
    ax = plt.subplot(111)
    plots = abundance_rank(x, cmap=plt.cm.Paired)
    plt.xlabel("Abundance rank")
    plt.ylabel("Read count")
    plt.semilogx()
    plt.semilogy()
    ax.spines['right'].set_visible(False)
    ax.spines['top'].set_visible(False)
    lgd = ax.legend(plots, list(otu_table.columns), loc='upper center',
                    bbox_to_anchor=(0.5, -0.2), fontsize=8)
    fig.savefig(args.output, bbox_extra_artists=(lgd,), bbox_inches='tight')

main()
