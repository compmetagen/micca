#! /usr/bin/env python

## This code is written by Davide Albanese, <davide.albanese@gmail.com>
## Copyright (C) 2013 Fondazione Edmund Mach
## Copyright (C) 2013 Davide Albanese

## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.

## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.

## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.


import argparse

from micca.otuutils import *
from micca import argutils
from micca import __version__


def main():

    description = """micca-filter filters OTUs from an OTU table based on their observation counts.
"""
    epilog = """Example:

 $ micca-filter otu_table.txt filtered.txt -M 200

micca v. %s.
Author: Davide Albanese <davide.albanese@fmach.it>
Fondazione Edmund Mach, 2014.
""" % __version__
    
    parser = argparse.ArgumentParser(
        description=description,
        formatter_class=argparse.RawDescriptionHelpFormatter,
        version=__version__, epilog=epilog)

    parser.add_argument('input', help="input OTU table file", type=argutils.rfile)
    parser.add_argument('output', help="output OTU table file", type=argutils.wfile)
    parser.add_argument('-m', '--min', metavar='N', type=int, default=2,
                        help="minimum total count per OTU (e.g., '-m 2' discards "
                        "singletons OTUs) (default %(default)s)")
    parser.add_argument('-M', '--max', metavar='N', type=int,
                        help="maximum total count per OTU (e.g., look at low "
                        "abundance OTUs) (default %(default)s)")

    args = parser.parse_args()

    filter_otu_table(args.input, args.output, min_count=args.min,
                     max_count=args.max)

main()
