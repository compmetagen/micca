#! /usr/bin/env python

## This code is written by Davide Albanese, <davide.albanese@gmail.com>
## Copyright (C) 2013 Fondazione Edmund Mach
## Copyright (C) 2013 Davide Albanese

## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.

## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.

## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.


import argparse

from micca.otuutils import *
from micca import argutils
from micca import __version__


def main():

    description = """Given an OTU table and a taxonomy file, micca-taxonomy builds an OTU table with
the taxomomy information and several OTU tables for each taxonomic level. OTU 
counts are summed together if they have the same consensus at the considered
level.
"""
    epilog = """Example:

 $ micca-taxonomy otu_table.txt taxonomy.txt -o otu_table_taxonomy

micca v. %s.
Author: Davide Albanese <davide.albanese@fmach.it>
Fondazione Edmund Mach, 2014.
""" % __version__

    parser = argparse.ArgumentParser(
        description=description,
        formatter_class=argparse.RawDescriptionHelpFormatter,
        version=__version__, epilog=epilog)

    parser.add_argument('otutable', type=argutils.rfile,
                        help="OTU table file")
    parser.add_argument('taxonomytable', type=argutils.rfile,
                        help="taxomomy file")
    parser.add_argument('-o', '--output-dir', metavar='DIR',
                        default=".",
                        help="output directory (default %(default)s)",
                        type=argutils.wdir)

    args = parser.parse_args()

    prefix, ext = os.path.splitext(os.path.basename(args.otutable))
    otu_table_taxonomy_filename = os.path.join(args.output_dir,
                                      prefix + "_taxonomy" + ext)
    taxonomy_otu_table(args.otutable, args.taxonomytable,
                       otu_table_taxonomy_filename)
    split_otu_table(otu_table_taxonomy_filename, args.output_dir)

main()
